@model david.hotelbooking.mvc.Models.UserRolesViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>@Model.User.Email</h4>
    @foreach (var item in Model.User.UserRoles)
    {
        <dl>
            <dt class="col-sm-10">
                @Html.DisplayFor(modelitem => item.Role.Name)
            </dt>
            @foreach (var it in item.Role.RolePermissions)
            {
                <dd class="col-sm-10">
                    @Html.DisplayFor(modelitem => it.Permission.Name)
                </dd>
            }
        </dl>
    }
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="User.Id" />
            <div class="form-group">
                <label asp-for="User.Email" class="control-label"></label>
                <input asp-for="User.Email" class="form-control" />
                <span asp-validation-for="User.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="User.Password" class="control-label"></label>
                <input asp-for="User.Password" class="form-control" />
                <span asp-validation-for="User.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
